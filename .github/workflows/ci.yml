name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rusty_gpt
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install trunk
        uses: jetli/trunk-action@v0.4.0
        with:
          version: 'latest'

      - name: Install wasm-bindgen-cli
        run: |
          cargo install wasm-bindgen-cli

      - name: Install wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Create .env file
        run: |
          cp .env.template .env
          echo "GITHUB_CLIENT_ID=test_client_id" >> .env
          echo "GITHUB_CLIENT_SECRET=test_client_secret" >> .env
          echo "APPLE_CLIENT_ID=test_client_id" >> .env

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Build frontend
        run: |
          cd frontend
          trunk build --release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: frontend/dist/
          retention-days: 7
