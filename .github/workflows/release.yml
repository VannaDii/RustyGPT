name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8
  LANGUAGE: en_US
  CARGO_HOME: ${{ github.workspace }}/.cargo

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"* %s (%h)" $(git rev-list --max-parents=0 HEAD)..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..HEAD)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## Changes in this Release

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            Download the appropriate binary for your platform from the assets below.
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

  build-binaries:
    name: Build Release Binaries
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Just
        uses: extractions/setup-just@v2

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-release-
            ${{ runner.os }}-cargo-

      - name: Create .env file
        shell: bash
        run: cp .env.template .env

      - name: Build release binaries
        run: cargo build --release --workspace --bin rustygpt-cli --bin rustygpt-server

      - name: Create release directory
        shell: bash
        run: mkdir -p release

      - name: Copy binaries (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cp target/release/rustygpt-cli release/
          cp target/release/rustygpt-server release/

      - name: Copy binaries (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cp target/release/rustygpt-cli.exe release/
          cp target/release/rustygpt-server.exe release/

      - name: Package binaries (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          tar -czf rustygpt-$VERSION-${{ matrix.target }}.tar.gz -C release .

      - name: Package binaries (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
          Compress-Archive -Path release/* -DestinationPath "rustygpt-$VERSION-${{ matrix.target }}.zip"

      - name: Upload Release Asset (Unix)
        if: matrix.os != 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: rustygpt-*.tar.gz

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: rustygpt-*.zip
