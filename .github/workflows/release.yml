name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8
  LANGUAGE: en_US
  CARGO_HOME: ${{ github.workspace }}/.cargo

jobs:
  build:
    name: Build Release
    container:
      image: rust:latest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Just
        uses: extractions/setup-just@v2

      - name: Add Cargo bin to PATH
        run: echo "${{ github.workspace }}/.cargo/bin" >> $GITHUB_PATH

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/cargo
            /usr/local/rustup
            ${{ env.CARGO_HOME }}/bin
            ${{ env.CARGO_HOME }}/git
            ${{ env.CARGO_HOME }}/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Create .env file
        run: cp .env.template .env

      - name: Install Cargo Tools
        run: just install

      - name: Build
        run: just build-release

      - name: Changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"* %s (%h)" $(git rev-list --max-parents=0 HEAD)..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..HEAD)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes in this Release

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            Download the appropriate binary for your platform and follow the installation instructions in the [README](README.md).
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          files: |
            target/release/backend
            frontend/dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG.md
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          DATE=$(date +%Y-%m-%d)

          # Create new changelog entry
          echo -e "# Changelog\n\n## $VERSION - $DATE\n\n${{ steps.changelog.outputs.changelog }}\n\n$(cat CHANGELOG.md 2>/dev/null || echo '')" > CHANGELOG.md

          # Commit and push the updated CHANGELOG.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md for $VERSION [skip ci]"
          git push --force-with-lease --no-verify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
