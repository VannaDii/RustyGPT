{
  "version": "0.1.0",
  "generated": "2025-10-26T20:32:34.170163094+00:00",
  "entries": [
    {
      "id": "architecture/index",
      "title": "Architecture Overview",
      "summary": "TL;DR – System-level views of RustyGPT services, data flows, and cross-cutting behaviours such as streaming and rate limiting.",
      "tags": [
        "whats-inside"
      ],
      "href": "/architecture/index/"
    },
    {
      "id": "architecture/rate-limits",
      "title": "Rate-Limit Architecture",
      "summary": "TL;DR – RustyGPT enforces per-route throttling through Postgres-backed profiles cached in memory, exposing admin APIs for live tuning.",
      "tags": [
        "admin-api",
        "data-model",
        "observability",
        "runtime-matching"
      ],
      "href": "/architecture/rate-limits/"
    },
    {
      "id": "architecture/service-topology",
      "title": "Service Topology",
      "summary": "TL;DR – The RustyGPT platform pairs an Axum-based API, background workers, and a Yew web client connected through message queues and SSE streams.",
      "tags": [
        "components",
        "data-flow",
        "operational-notes",
        "scaling"
      ],
      "href": "/architecture/service-topology/"
    },
    {
      "id": "architecture/streaming",
      "title": "Streaming Delivery",
      "summary": "TL;DR – RustyGPT streams conversation updates over Server-Sent Events (SSE) with persisted replay, ensuring reconnecting clients rebuild state without losing tokens.",
      "tags": [
        "client-responsibilities",
        "diagram",
        "event-model",
        "persistence-window",
        "replay-contract"
      ],
      "href": "/architecture/streaming/"
    },
    {
      "id": "changelog/index",
      "title": "Release Notes",
      "summary": "TL;DR – Highlights of RustyGPT releases with links to tags and the canonical changelog.",
      "tags": [
        "latest",
        "stable-releases"
      ],
      "href": "/changelog/index/"
    },
    {
      "id": "concepts/dimensioned-entities",
      "title": "Dimensioned Entities",
      "summary": "TL;DR – Dimensioned entities annotate RustyGPT data structures with semantic and temporal dimensions so downstream systems can reason about provenance and lifecycle.",
      "tags": [
        "further-reading",
        "implementation",
        "motivation",
        "usage-guidelines"
      ],
      "href": "/concepts/dimensioned-entities/"
    },
    {
      "id": "concepts/index",
      "title": "Concepts Overview",
      "summary": "TL;DR – Core principles that underpin RustyGPT’s reasoning, data model, and invariants.",
      "tags": [
        "featured-concepts",
        "scope"
      ],
      "href": "/concepts/index/"
    },
    {
      "id": "concepts/reasoning-dag",
      "title": "Reasoning DAG",
      "summary": "TL;DR – RustyGPT models agent reasoning as a directed acyclic graph so parallel branches can explore hypotheses while preserving deterministic joins.",
      "tags": [
        "benefits",
        "extending-the-graph",
        "node-types",
        "overview",
        "related-concepts"
      ],
      "href": "/concepts/reasoning-dag/"
    },
    {
      "id": "guide/index",
      "title": "Guide Overview",
      "summary": "TL;DR – Step-by-step walkthroughs for installing, running, and validating RustyGPT locally and in shared environments.",
      "tags": [
        "featured-walkthroughs",
        "when-to-use-guides"
      ],
      "href": "/guide/index/"
    },
    {
      "id": "guide/local-dev",
      "title": "Local Development",
      "summary": "TL;DR – Configure environment variables, run the server, CLI, and web client together, and tighten the feedback loop with watch commands.",
      "tags": [
        "cli-tooling",
        "debugging",
        "environment-setup",
        "run-watchers"
      ],
      "href": "/guide/local-dev/"
    },
    {
      "id": "guide/quickstart",
      "title": "Quickstart",
      "summary": "TL;DR – Install the Rust 2024 toolchain, run the RustyGPT server and web UI locally, and verify streaming chat flows with seeded demo data.",
      "tags": [
        "build-the-web-client",
        "prerequisites",
        "seed-demo-data",
        "start-the-backend"
      ],
      "href": "/guide/quickstart/"
    },
    {
      "id": "howto/docker-deploy",
      "title": "Docker Deploy",
      "summary": "TL;DR – Build RustyGPT images with Cargo, push to your registry, and deploy via Docker Compose or Kubernetes with environment-specific configuration.",
      "tags": [
        "build-containers",
        "compose-deployment",
        "post-deployment-checks",
        "provision-dependencies",
        "rollback"
      ],
      "href": "/howto/docker-deploy/"
    },
    {
      "id": "howto/index",
      "title": "How-to Overview",
      "summary": "TL;DR – Task-oriented instructions for operating, deploying, and maintaining RustyGPT.",
      "tags": [
        "available-playbooks"
      ],
      "href": "/howto/index/"
    },
    {
      "id": "howto/rotate-secrets",
      "title": "Rotate Secrets",
      "summary": "TL;DR – Rotate API keys and credentials without downtime by staging new values, triggering config reloads, and confirming session continuity.",
      "tags": [
        "automation-ideas",
        "incident-response",
        "observability",
        "preparation",
        "rotation-steps"
      ],
      "href": "/howto/rotate-secrets/"
    },
    {
      "id": "index",
      "title": "RustyGPT Documentation",
      "summary": "TL;DR – Everything you need to build, run, and extend RustyGPT with a pure Rust toolchain. Start with Quickstart, then dive into Concepts and Architecture for deeper system insight.",
      "tags": [
        "about-rustygpt",
        "fast-links",
        "governance-support"
      ],
      "href": "/index/"
    },
    {
      "id": "reference/api",
      "title": "REST API",
      "summary": "TL;DR – RustyGPT exposes authenticated REST and SSE endpoints for conversations, admin tooling, and health checks; prefer relative URLs from the web or CLI clients.",
      "tags": [
        "admin-operations",
        "authentication",
        "core-endpoints",
        "error-model",
        "openapi"
      ],
      "href": "/reference/api/"
    },
    {
      "id": "reference/authentication",
      "title": "Authentication",
      "summary": "TL;DR – RustyGPT authenticates with HttpOnly cookie sessions backed by Postgres, providing rotation, CSRF protection, and admin observability.",
      "tags": [
        "client-guidance",
        "csrf-enforcement",
        "cutover-runbook",
        "observability",
        "session-endpoints",
        "session-lifecycle"
      ],
      "href": "/reference/authentication/"
    },
    {
      "id": "reference/config",
      "title": "Configuration",
      "summary": "TL;DR – All RustyGPT services share a TOML configuration merged with environment variables; this page maps each key to runtime behaviour.",
      "tags": [
        "database-block",
        "loading-order",
        "observability-block",
        "rate-limit-block",
        "secrets",
        "server-block",
        "session-block"
      ],
      "href": "/reference/config/"
    },
    {
      "id": "reference/index",
      "title": "Reference Overview",
      "summary": "TL;DR – Authoritative details for RustyGPT’s public surfaces: authentication, REST endpoints, and configuration keys.",
      "tags": [
        "quick-navigation"
      ],
      "href": "/reference/index/"
    }
  ]
}